/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ZustandIndexImport } from './routes/zustand/index'
import { Route as TsqueryIndexImport } from './routes/tsquery/index'
import { Route as ReduxIndexImport } from './routes/redux/index'
import { Route as ZustandListingIdImport } from './routes/zustand/$listingId'
import { Route as TsqueryListingIdImport } from './routes/tsquery/$listingId'
import { Route as ReduxListingIdImport } from './routes/redux/$listingId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ZustandIndexRoute = ZustandIndexImport.update({
  id: '/zustand/',
  path: '/zustand/',
  getParentRoute: () => rootRoute,
} as any)

const TsqueryIndexRoute = TsqueryIndexImport.update({
  id: '/tsquery/',
  path: '/tsquery/',
  getParentRoute: () => rootRoute,
} as any)

const ReduxIndexRoute = ReduxIndexImport.update({
  id: '/redux/',
  path: '/redux/',
  getParentRoute: () => rootRoute,
} as any)

const ZustandListingIdRoute = ZustandListingIdImport.update({
  id: '/zustand/$listingId',
  path: '/zustand/$listingId',
  getParentRoute: () => rootRoute,
} as any)

const TsqueryListingIdRoute = TsqueryListingIdImport.update({
  id: '/tsquery/$listingId',
  path: '/tsquery/$listingId',
  getParentRoute: () => rootRoute,
} as any)

const ReduxListingIdRoute = ReduxListingIdImport.update({
  id: '/redux/$listingId',
  path: '/redux/$listingId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/redux/$listingId': {
      id: '/redux/$listingId'
      path: '/redux/$listingId'
      fullPath: '/redux/$listingId'
      preLoaderRoute: typeof ReduxListingIdImport
      parentRoute: typeof rootRoute
    }
    '/tsquery/$listingId': {
      id: '/tsquery/$listingId'
      path: '/tsquery/$listingId'
      fullPath: '/tsquery/$listingId'
      preLoaderRoute: typeof TsqueryListingIdImport
      parentRoute: typeof rootRoute
    }
    '/zustand/$listingId': {
      id: '/zustand/$listingId'
      path: '/zustand/$listingId'
      fullPath: '/zustand/$listingId'
      preLoaderRoute: typeof ZustandListingIdImport
      parentRoute: typeof rootRoute
    }
    '/redux/': {
      id: '/redux/'
      path: '/redux'
      fullPath: '/redux'
      preLoaderRoute: typeof ReduxIndexImport
      parentRoute: typeof rootRoute
    }
    '/tsquery/': {
      id: '/tsquery/'
      path: '/tsquery'
      fullPath: '/tsquery'
      preLoaderRoute: typeof TsqueryIndexImport
      parentRoute: typeof rootRoute
    }
    '/zustand/': {
      id: '/zustand/'
      path: '/zustand'
      fullPath: '/zustand'
      preLoaderRoute: typeof ZustandIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/redux/$listingId': typeof ReduxListingIdRoute
  '/tsquery/$listingId': typeof TsqueryListingIdRoute
  '/zustand/$listingId': typeof ZustandListingIdRoute
  '/redux': typeof ReduxIndexRoute
  '/tsquery': typeof TsqueryIndexRoute
  '/zustand': typeof ZustandIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/redux/$listingId': typeof ReduxListingIdRoute
  '/tsquery/$listingId': typeof TsqueryListingIdRoute
  '/zustand/$listingId': typeof ZustandListingIdRoute
  '/redux': typeof ReduxIndexRoute
  '/tsquery': typeof TsqueryIndexRoute
  '/zustand': typeof ZustandIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/redux/$listingId': typeof ReduxListingIdRoute
  '/tsquery/$listingId': typeof TsqueryListingIdRoute
  '/zustand/$listingId': typeof ZustandListingIdRoute
  '/redux/': typeof ReduxIndexRoute
  '/tsquery/': typeof TsqueryIndexRoute
  '/zustand/': typeof ZustandIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/redux/$listingId'
    | '/tsquery/$listingId'
    | '/zustand/$listingId'
    | '/redux'
    | '/tsquery'
    | '/zustand'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/redux/$listingId'
    | '/tsquery/$listingId'
    | '/zustand/$listingId'
    | '/redux'
    | '/tsquery'
    | '/zustand'
  id:
    | '__root__'
    | '/'
    | '/redux/$listingId'
    | '/tsquery/$listingId'
    | '/zustand/$listingId'
    | '/redux/'
    | '/tsquery/'
    | '/zustand/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ReduxListingIdRoute: typeof ReduxListingIdRoute
  TsqueryListingIdRoute: typeof TsqueryListingIdRoute
  ZustandListingIdRoute: typeof ZustandListingIdRoute
  ReduxIndexRoute: typeof ReduxIndexRoute
  TsqueryIndexRoute: typeof TsqueryIndexRoute
  ZustandIndexRoute: typeof ZustandIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ReduxListingIdRoute: ReduxListingIdRoute,
  TsqueryListingIdRoute: TsqueryListingIdRoute,
  ZustandListingIdRoute: ZustandListingIdRoute,
  ReduxIndexRoute: ReduxIndexRoute,
  TsqueryIndexRoute: TsqueryIndexRoute,
  ZustandIndexRoute: ZustandIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/redux/$listingId",
        "/tsquery/$listingId",
        "/zustand/$listingId",
        "/redux/",
        "/tsquery/",
        "/zustand/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/redux/$listingId": {
      "filePath": "redux/$listingId.tsx"
    },
    "/tsquery/$listingId": {
      "filePath": "tsquery/$listingId.tsx"
    },
    "/zustand/$listingId": {
      "filePath": "zustand/$listingId.tsx"
    },
    "/redux/": {
      "filePath": "redux/index.tsx"
    },
    "/tsquery/": {
      "filePath": "tsquery/index.tsx"
    },
    "/zustand/": {
      "filePath": "zustand/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
